from mage_ai.io.file import FileIO
if 'data_loader' not in globals():
    from mage_ai.data_preparation.decorators import data_loader
if 'test' not in globals():
bike_demand_prediction
Pipelines
bikes2
Edit
v0.9.75

17:38 UTC
Live help


ALL FILES

CURRENT BLOCKS




bike_demand_prediction
data_loaders
pipelines
scratchpads
transformers
batch_prediction.py
data_processing.py
model_training.py
monitoring.py
metadata.yaml

File

Edit

Run

View

Python
PY
DATA LOADER
data_ingestion_bikes2






123456789101112131415161718192021222324252627282930
from mage_ai.io.file import FileIOif 'data_loader' not in globals():    from mage_ai.data_preparation.decorators import data_loaderif 'test' not in globals():    from mage_ai.data_preparation.decorators import test@data_loaderdef load_data_from_file(*args, **kwargs):    """    Template for loading data from filesystem.    Load data from 1 file or multiple file directories.    For multiple directories, use the following:        FileIO().load(file_directories=['dir_1', 'dir_2'])    Docs: https://docs.mage.ai/design/data-loading#fileio    """    filepath = 'path/to/your/file.csv'    return FileIO().load(filepath)@testdef test_output(output, *args) -> None:    """    Template code for testing the output of the block.    """    assert output is not None, 'The output is undefined'

---------------------------------------------------------------------------
FileNotFoundError                         Traceback (most recent call last)
File /app/bike_demand_prediction/data_loaders/data_ingestion_bikes2.py:21, in load_data_from_file(*args, **kwargs)
     10 """
     11 Template for loading data from filesystem.
     12 Load data from 1 file or multiple file directories.
   (...)
     17 Docs: https://docs.mage.ai/design/data-loading#fileio
     18 """
     19 filepath = 'path/to/your/file.csv'
---> 21 return FileIO().load(filepath)
File /usr/local/lib/python3.9/site-packages/mage_ai/io/file.py:38, in FileIO.load(self, filepath, format, file_directories, **kwargs)
     35     if format is None:
     36         format = self._get_file_format(filepath)
---> 38     return self._read(filepath, format, **kwargs)
     40 file_paths = []
     41 for file_directory in file_directories:
File /usr/local/lib/python3.9/site-packages/mage_ai/io/base.py:201, in BaseFile._read(self, input, format, limit, **kwargs)
    188 """
    189 Loads the data frame from the filepath or buffer specified.
    190 
   (...)
    198     DataFrame: Data frame object loaded from the specified data frame.
    199 """
    200 reader = self.__get_reader(format)
--> 201 df = reader(input, **kwargs)
    202 return df
File /usr/local/lib/python3.9/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)
   1013 kwds_defaults = _refine_defaults_read(
   1014     dialect,
   1015     delimiter,
   (...)
   1022     dtype_backend=dtype_backend,
   1023 )
   1024 kwds.update(kwds_defaults)
-> 1026 return _read(filepath_or_buffer, kwds)
File /usr/local/lib/python3.9/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)
    617 _validate_names(kwds.get("names", None))
    619 # Create the parser.
--> 620 parser = TextFileReader(filepath_or_buffer, **kwds)
    622 if chunksize or iterator:
    623     return parser
File /usr/local/lib/python3.9/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)
   1617     self.options["has_index_names"] = kwds["has_index_names"]
   1619 self.handles: IOHandles | None = None
-> 1620 self._engine = self._make_engine(f, self.engine)
File /usr/local/lib/python3.9/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)
   1878     if "b" not in mode:
   1879         mode += "b"
-> 1880 self.handles = get_handle(
   1881     f,
   1882     mode,
   1883     encoding=self.options.get("encoding", None),
   1884     compression=self.options.get("compression", None),
   1885     memory_map=self.options.get("memory_map", False),
   1886     is_text=is_text,
   1887     errors=self.options.get("encoding_errors", "strict"),
   1888     storage_options=self.options.get("storage_options", None),
   1889 )
   1890 assert self.handles is not None
   1891 f = self.handles.handle
File /usr/local/lib/python3.9/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)
    868 elif isinstance(handle, str):
    869     # Check whether the filename is to be opened in binary mode.
    870     # Binary mode does not support 'encoding' and 'newline'.
    871     if ioargs.encoding and "b" not in ioargs.mode:
    872         # Encoding
--> 873         handle = open(
    874             handle,
    875             ioargs.mode,
    876             encoding=ioargs.encoding,
    877             errors=errors,
    878             newline="",
    879         )
    880     else:
    881         # Binary mode
    882         handle = open(handle, ioargs.mode)
FileNotFoundError: [Errno 2] No such file or directory: 'path/to/your/file.csv'

1.002s
!
PY
SCRATCHPAD
 
data_processing_bikes2






(9 lines collapsed)
PY
TRANSFORMER
batch_prediction






Positional arguments for decorated function:
@transformer
def transform(data):
    data â†’ data_ingestion_bikes2
1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253
"""Batch prediction block for bike demand prediction."""import osimport pandas as pdimport mlflow.sklearnFINAL_DATA_PATH = 'data/final'MODEL_PATH = 'models'PREDICTIONS_PATH = 'data/predictions'def execute(**kwargs):    """Generate predictions using the trained model."""    try:        print("Starting batch prediction...")        # Ensure predictions directory exists        os.makedirs(PREDICTIONS_PATH, exist_ok=True)        print(f"Predictions directory: {PREDICTIONS_PATH}")        # Load the trained model        model_file = os.path.join(MODEL_PATH, 'random_forest_model.pkl')        print(f"Loading model from {model_file}")        model = mlflow.sklearn.load_model(model_file)        # Load test data        test_file = os.path.join(FINAL_DATA_PATH, 'test_bikes_final.csv')        print(f"Loading test data from {test_file}")        test_data = pd.read_csv(test_file)        # Generate predictions        predictions = model.predict(test_data)        # Save predictions        predictions_df = pd.DataFrame({'prediction': predictions})        predictions_file = os.path.join(PREDICTIONS_PATH, 'predictions.csv')        predictions_df.to_csv(predictions_file, index=False)        print(f"Predictions saved to {predictions_file}")        print("Batch prediction completed successfully.")    except FileNotFoundError as e:        print(f"File not found: {e}")        raise    except Exception as e:        print(f"An error occurred during batch prediction: {e}")        raiseif __name__ == "__main__":    execute()

DBT library not installed.
---------------------------------------------------------------------------
Exception                                 Traceback (most recent call last)
Exception: Block batch_prediction's upstream blocks have not been executed yet. Please run upstream blocks ['data_ingestion_bikes2'] before running the current block.

1.94s
!

Data loader

Transformer

Data exporter

DBT model

Custom

Scratchpad

Global data product

Sensor

Markdown
Want to try the new add block UI?
Turn on the feature named add_new_block_v2 in your project settings.
CPU: 0%
/
Memory: 242.53MB
Saved a few seconds ago

Tree



100%
data_ingestion_bikes2
Data loader
PY
batch_prediction
Transformer
PY

Text Editor




    from mage_ai.data_preparation.decorators import test


@data_loader
def load_data_from_file(*args, **kwargs):
    """
    Template for loading data from filesystem.
    Load data from 1 file or multiple file directories.

    For multiple directories, use the following:
        FileIO().load(file_directories=['dir_1', 'dir_2'])

    Docs: https://docs.mage.ai/design/data-loading#fileio
    """
    filepath = 'path/to/your/file.csv'

    return FileIO().load(filepath)


@test
def test_output(output, *args) -> None:
    """
    Template code for testing the output of the block.
    """
    assert output is not None, 'The output is undefined'
